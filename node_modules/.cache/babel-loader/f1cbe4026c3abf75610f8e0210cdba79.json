{"ast":null,"code":"import _slicedToArray from \"/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Feed from './Components/Feed';\nimport axios from \"axios\";\nimport styled from 'styled-components';\nimport Switch from \"react-switch\";\n\nconst App = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        idFilter = _useState4[0],\n        setIdFilter = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        titleFilter = _useState6[0],\n        setTitleFilter = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        limit = _useState8[0],\n        setLimit = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        darkMode = _useState10[0],\n        setDarkMode = _useState10[1];\n\n  const _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        loading = _useState12[0],\n        setLoading = _useState12[1];\n\n  const fetchData = () => {\n    //Fetch api data\n    let url = 'https://jsonplaceholder.typicode.com/photos?_start=0&_limit=' + (limit + 30);\n    axios.get(url).then(res => {\n      setData(res.data);\n      setLoading(false);\n    });\n  };\n\n  const isScrolling = () => {\n    // Set the load limit higher when bottom of page is reached\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) {\n      return;\n    }\n\n    setLimit(limit + 30);\n  };\n\n  const filterByID = e => {\n    e.preventDefault();\n    setIdFilter(e.target.value);\n    let url = 'https://jsonplaceholder.typicode.com/photos?id=' + e.target.value;\n    axios.get(url).then(res => {\n      setData(res.data);\n    });\n  };\n\n  const filterByTitle = e => {\n    e.preventDefault();\n    setTitleFilter(e.target.value);\n    let url = 'https://jsonplaceholder.typicode.com/photos?title=' + e.target.value;\n    axios.get(url).then(res => {\n      setData(res.data);\n    });\n  };\n\n  useEffect(() => {\n    // Fetch unfiltered data whenever searches are empty\n    if (data.length !== limit + 30 && titleFilter.length === 0 && idFilter.length === 0) {\n      setLoading(true);\n      fetchData();\n    } // Listen to scrolling events (to fetch for more data when bottom is reached)\n\n\n    window.addEventListener(\"scroll\", isScrolling);\n    return () => window.removeEventListener(\"scroll\", isScrolling);\n  }); // Return loading and no results text\n\n  const isLoading = () => {\n    if (loading) {\n      return React.createElement(InfoText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Loading...\");\n    } else if (!loading && data.length === 0) {\n      return React.createElement(InfoText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"No Results Found\");\n    }\n  };\n\n  const buttons = React.createElement(Buttons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Blog Clone\"), React.createElement(\"input\", {\n    type: \"search\",\n    onChange: filterByID,\n    placeholder: \"Search by ID\",\n    value: idFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"search\",\n    onChange: filterByTitle,\n    placeholder: \"Search by title\",\n    value: titleFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    onChange: () => setDarkMode(!darkMode),\n    checked: darkMode ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, !darkMode ? React.createElement(LightContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, buttons, React.createElement(Feed, {\n    mode: \"light\",\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), isLoading()) : React.createElement(DarkContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, buttons, React.createElement(Feed, {\n    mode: \"dark\",\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), isLoading()));\n};\n\nconst LightContainer = styled.div`\n    background-color: #F9F8F6;\n    color: black;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    z-index: 0;\n    min-height: 100vh;\n`;\nconst DarkContainer = styled.div`\n    background-color: #121212;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: white;\n    z-index: 0;\n    min-height: 100vh;\n`;\nconst InfoText = styled.p`\n    font-family: 'Playfair Display', serif;\n    margin-top: 100px;\n`;\nconst Buttons = styled.div`\n    button{\n        &:hover{\n            cursor: pointer;\n        }\n        transition: 0.5s;\n        opacity: 1;\n        font-size: 13px;\n        font-family: 'Source Sans Pro', sans-serif;\n        padding: 15px;\n        background: none;\n        margin-left: 10px;\n        margin-right: 2em;\n        border: none;\n        border-radius: 10px;\n    }\n    input{\n        &::placeholder{\n            font-size: 1.2em;\n        }\n        border: none;\n        border-bottom: 2px solid rgba(0,0,0,0.1);\n        margin-left: 10px;\n        margin-right: 10px;\n        font-family: 'Source Sans Pro', sans-serif;\n        font-size: 13px;\n        padding: 15px;\n        background: none;\n        color: inherit;\n    }\n    h1{\n        font-family: 'Playfair Display', serif;\n    }\n    @media (max-width: 600px) {\n        height: 200px;\n        h1{\n            width: 100%;\n            text-align: center;\n        }\n    }\n    @media (min-width: 600px) {\n        height: 100px;\n    }\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    background-color: inherit;\n    flex-wrap: wrap;\n    align-content: stretch;\n`;\nexport default App;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/src/App.js"],"names":["React","useState","useEffect","Feed","axios","styled","Switch","App","props","data","setData","idFilter","setIdFilter","titleFilter","setTitleFilter","limit","setLimit","darkMode","setDarkMode","loading","setLoading","fetchData","url","get","then","res","isScrolling","window","innerHeight","document","documentElement","scrollTop","offsetHeight","filterByID","e","preventDefault","target","value","filterByTitle","length","addEventListener","removeEventListener","isLoading","buttons","LightContainer","div","DarkContainer","InfoText","p","Buttons"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Feed from './Components/Feed'\nimport axios from \"axios\";\nimport styled from 'styled-components'\nimport Switch from \"react-switch\";\n\nconst App = props => {\n\n    const [data, setData] = useState([])\n    const [idFilter, setIdFilter] = useState('')\n    const [titleFilter, setTitleFilter] = useState('')\n    const [limit, setLimit] = useState(0)\n    const [darkMode, setDarkMode] = useState(false)\n    const [loading, setLoading] = useState(true)\n\n    const fetchData = () => {\n        //Fetch api data\n        let url = 'https://jsonplaceholder.typicode.com/photos?_start=0&_limit='+(limit+30)\n        axios.get(url).then(res => {\n            setData(res.data)\n            setLoading(false)\n        })\n    }\n\n    const isScrolling = () => {\n        // Set the load limit higher when bottom of page is reached\n        if(window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight){\n          return;\n        }\n        setLimit(limit + 30)\n    }\n\n    const filterByID = (e) => {\n        e.preventDefault()\n        setIdFilter(e.target.value)\n        let url = 'https://jsonplaceholder.typicode.com/photos?id=' + e.target.value\n        axios.get(url).then(res => {\n            setData(res.data)\n        })\n    }\n\n    const filterByTitle = (e) => {\n        e.preventDefault()\n        setTitleFilter(e.target.value)\n        let url = 'https://jsonplaceholder.typicode.com/photos?title=' + e.target.value\n        axios.get(url).then(res => {\n            setData(res.data)\n        })\n    }\n      \n    useEffect(() => {\n        // Fetch unfiltered data whenever searches are empty\n        if(data.length !== (limit + 30) && titleFilter.length === 0 && idFilter.length === 0){\n            setLoading(true)\n            fetchData()\n        }\n        // Listen to scrolling events (to fetch for more data when bottom is reached)\n        window.addEventListener(\"scroll\", isScrolling);\n        return () => window.removeEventListener(\"scroll\", isScrolling);\n    })\n\n    // Return loading and no results text\n    const isLoading = () =>{\n        if(loading){\n            return <InfoText>Loading...</InfoText>\n        }else if(!loading && data.length === 0){\n            return <InfoText>No Results Found</InfoText>\n        }\n    }\n\n    const buttons = (\n        <Buttons>\n            <h1>Blog Clone</h1>\n            <input \n                type=\"search\" \n                onChange={filterByID}\n                placeholder=\"Search by ID\"\n                value={idFilter}\n            />\n            <input \n                type=\"search\" \n                onChange={filterByTitle}\n                placeholder=\"Search by title\"\n                value={titleFilter}\n            />    \n            <Switch \n                onChange={() => setDarkMode(!darkMode)} \n                checked={darkMode ? true : false}\n            />\n        </Buttons>\n    )\n\n    return (\n        <div>\n            {!darkMode ?\n                <LightContainer>\n                    {buttons}\n                    <Feed mode=\"light\" data={data}/>\n                    {isLoading()}\n                </LightContainer> \n                :\n                <DarkContainer>\n                    {buttons}\n                    <Feed mode=\"dark\" data={data}/>\n                    {isLoading()}\n                </DarkContainer>\n            }\n        </div>\n    );\n}\n\nconst LightContainer = styled.div`\n    background-color: #F9F8F6;\n    color: black;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    z-index: 0;\n    min-height: 100vh;\n`\n\nconst DarkContainer = styled.div`\n    background-color: #121212;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: white;\n    z-index: 0;\n    min-height: 100vh;\n`\n\nconst InfoText = styled.p`\n    font-family: 'Playfair Display', serif;\n    margin-top: 100px;\n`\n\nconst Buttons = styled.div`\n    button{\n        &:hover{\n            cursor: pointer;\n        }\n        transition: 0.5s;\n        opacity: 1;\n        font-size: 13px;\n        font-family: 'Source Sans Pro', sans-serif;\n        padding: 15px;\n        background: none;\n        margin-left: 10px;\n        margin-right: 2em;\n        border: none;\n        border-radius: 10px;\n    }\n    input{\n        &::placeholder{\n            font-size: 1.2em;\n        }\n        border: none;\n        border-bottom: 2px solid rgba(0,0,0,0.1);\n        margin-left: 10px;\n        margin-right: 10px;\n        font-family: 'Source Sans Pro', sans-serif;\n        font-size: 13px;\n        padding: 15px;\n        background: none;\n        color: inherit;\n    }\n    h1{\n        font-family: 'Playfair Display', serif;\n    }\n    @media (max-width: 600px) {\n        height: 200px;\n        h1{\n            width: 100%;\n            text-align: center;\n        }\n    }\n    @media (min-width: 600px) {\n        height: 100px;\n    }\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    background-color: inherit;\n    flex-wrap: wrap;\n    align-content: stretch;\n`\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}