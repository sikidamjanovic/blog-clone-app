{"ast":null,"code":"import _slicedToArray from \"/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Feed from './Components/Feed';\nimport axios from \"axios\";\nimport styled from 'styled-components';\n\nconst App = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isFiltering = _useState4[0],\n        setIsFiltering = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        limit = _useState6[0],\n        setLimit = _useState6[1];\n\n  const _useState7 = useState('light'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        mode = _useState8[0],\n        setMode = _useState8[1];\n\n  const _useState9 = useState(true),\n        _useState10 = _slicedToArray(_useState9, 2),\n        loading = _useState10[0],\n        setLoading = _useState10[1];\n\n  const fetchData = () => {\n    //Fetch api data\n    let url = 'https://jsonplaceholder.typicode.com/photos?_start=0&_limit=' + (limit + 30);\n    axios.get(url).then(res => {\n      setData(res.data);\n      setLoading(false);\n    });\n  };\n\n  const isScrolling = () => {\n    // Set the load limit higher when bottom of page is reached\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) {\n      return;\n    }\n\n    setLimit(limit + 30);\n  };\n\n  const filterByID = e => {\n    e.preventDefault();\n    setIsFiltering(e.target.value);\n    let url = 'https://jsonplaceholder.typicode.com/photos?id=' + e.target.value;\n    axios.get(url).then(res => {\n      setData(res.data);\n    });\n  };\n\n  const filterByTitle = e => {\n    e.preventDefault();\n    setIsFiltering(true);\n    let url = 'https://jsonplaceholder.typicode.com/photos?title=' + e.target.value;\n    axios.get(url).then(res => {\n      setData(res.data);\n    });\n  };\n\n  useEffect(() => {\n    // Fetch unfiltered data whenever searches are empty\n    if (data.length !== limit + 30 && !isFiltering) {\n      setLoading(true);\n      fetchData();\n    } // Listen to scrolling events (to fetch for more data when bottom is reached)\n\n\n    window.addEventListener(\"scroll\", isScrolling);\n    return () => window.removeEventListener(\"scroll\", isScrolling);\n  });\n\n  const morePosts = () => {\n    if (loading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"More Posts...\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, mode === \"light\" ? React.createElement(LightContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Buttons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"search\",\n    onChange: filterByID,\n    placeholder: \"Search by ID (1-5000)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"search\",\n    onChange: filterByTitle,\n    placeholder: \"Search by Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setMode('dark'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Dark Mode\")), React.createElement(Feed, {\n    mode: \"light\",\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), morePosts()) : React.createElement(DarkContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Buttons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"search\",\n    onChange: filterByID,\n    placeholder: \"Search by ID (1-5000)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"search\",\n    onChange: filterByTitle,\n    placeholder: \"Search by Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setMode('light'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Light Mode\")), React.createElement(Feed, {\n    mode: \"dark\",\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), morePosts()));\n};\n\nconst LightContainer = styled.div`\n    background-color: #F9F8F6;\n    color: black;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    z-index: 0;\n    min-height: 100vh;\n`;\nconst DarkContainer = styled.div`\n    background-color: #121212;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: white;\n    z-index: 0;\n    min-height: 100vh;\n`;\nconst Buttons = styled.div`\n    button{\n        &:hover{\n            cursor: pointer;\n        }\n        transition: 0.5s;\n        opacity: 1;\n        font-size: 13px;\n        font-family: 'Open Sans', san-serif;\n        padding: 15px;\n        background-color: #FFB21B;\n        margin-left: 10px;\n        margin-right: 2em;\n        border: none;\n        border-radius: 15px;\n        color: white;\n    }\n    input{\n        &::placeholder{\n            color: rgb(0,0,0,0.8);\n            font-size: 2em;\n        }\n        border: none;\n        margin-left: 10px;\n        margin-right: 10px;\n        font-family: 'Open Sans', san-serif;\n        font-size: 13px;\n        padding: 15px;\n        background: none;\n    }\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    height: 100px;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: inherit;\n`;\nexport default App;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/src/App.js"],"names":["React","useState","useEffect","Feed","axios","styled","App","props","data","setData","isFiltering","setIsFiltering","limit","setLimit","mode","setMode","loading","setLoading","fetchData","url","get","then","res","isScrolling","window","innerHeight","document","documentElement","scrollTop","offsetHeight","filterByID","e","preventDefault","target","value","filterByTitle","length","addEventListener","removeEventListener","morePosts","LightContainer","div","DarkContainer","Buttons"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Feed from './Components/Feed'\nimport axios from \"axios\";\nimport styled from 'styled-components'\n\nconst App = props => {\n\n    const [data, setData] = useState([])\n    const [isFiltering, setIsFiltering] = useState('')\n    const [limit, setLimit] = useState(0)\n    const [mode, setMode] = useState('light')\n    const [loading, setLoading] = useState(true)\n\n    const fetchData = () => {\n        //Fetch api data\n        let url = 'https://jsonplaceholder.typicode.com/photos?_start=0&_limit='+(limit+30)\n        axios.get(url).then(res => {\n            setData(res.data)\n            setLoading(false)\n        })\n    }\n\n    const isScrolling = () => {\n        // Set the load limit higher when bottom of page is reached\n        if(window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight){\n          return;\n        }\n        setLimit(limit + 30)\n    }\n\n    const filterByID = (e) => {\n        e.preventDefault()\n        setIsFiltering(e.target.value)\n        let url = 'https://jsonplaceholder.typicode.com/photos?id=' + e.target.value\n        axios.get(url).then(res => {\n            setData(res.data)\n        })\n    }\n\n    const filterByTitle = (e) => {\n        e.preventDefault()\n        setIsFiltering(true)\n        let url = 'https://jsonplaceholder.typicode.com/photos?title=' + e.target.value\n        axios.get(url).then(res => {\n            setData(res.data)\n        })\n    }\n      \n    useEffect(() => {\n        // Fetch unfiltered data whenever searches are empty\n        if(data.length !== (limit + 30) && !isFiltering){\n            setLoading(true)\n            fetchData()\n        }\n        // Listen to scrolling events (to fetch for more data when bottom is reached)\n        window.addEventListener(\"scroll\", isScrolling);\n        return () => window.removeEventListener(\"scroll\", isScrolling);\n    })\n\n    const morePosts = () =>{\n        if(loading){\n            return <p>More Posts...</p>\n        } \n    }\n\n    return (\n        <div>\n            {mode === \"light\" ?\n                <LightContainer>\n                    <Buttons>\n                        <input type=\"search\" onChange={filterByID}placeholder=\"Search by ID (1-5000)\"/>\n                        <input type=\"search\" onChange={filterByTitle}placeholder=\"Search by Title\"/>    \n                        <button onClick={() => setMode('dark')}>Dark Mode</button>\n                    </Buttons>\n                    <Feed mode=\"light\" data={data}/>\n                    {morePosts()}\n                </LightContainer> \n                :\n                <DarkContainer>\n                    <Buttons>\n                        <input type=\"search\" onChange={filterByID}placeholder=\"Search by ID (1-5000)\"/>\n                        <input type=\"search\" onChange={filterByTitle}placeholder=\"Search by Title\"/>\n                        <button onClick={() => setMode('light')}>Light Mode</button>\n                    </Buttons>\n                    <Feed mode=\"dark\" data={data}/>\n                    {morePosts()}\n                </DarkContainer>\n            }\n        </div>\n    );\n}\n\nconst LightContainer = styled.div`\n    background-color: #F9F8F6;\n    color: black;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    z-index: 0;\n    min-height: 100vh;\n`\n\nconst DarkContainer = styled.div`\n    background-color: #121212;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: white;\n    z-index: 0;\n    min-height: 100vh;\n`\n\nconst Buttons = styled.div`\n    button{\n        &:hover{\n            cursor: pointer;\n        }\n        transition: 0.5s;\n        opacity: 1;\n        font-size: 13px;\n        font-family: 'Open Sans', san-serif;\n        padding: 15px;\n        background-color: #FFB21B;\n        margin-left: 10px;\n        margin-right: 2em;\n        border: none;\n        border-radius: 15px;\n        color: white;\n    }\n    input{\n        &::placeholder{\n            color: rgb(0,0,0,0.8);\n            font-size: 2em;\n        }\n        border: none;\n        margin-left: 10px;\n        margin-right: 10px;\n        font-family: 'Open Sans', san-serif;\n        font-size: 13px;\n        padding: 15px;\n        background: none;\n    }\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    height: 100px;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: inherit;\n`\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}