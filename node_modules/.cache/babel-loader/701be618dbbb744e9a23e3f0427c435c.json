{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar createReactClass = require('create-react-class');\n\nvar loremIpsum = require('lorem-ipsum');\n\nvar random = require('seedable-random');\n\nvar extend = require('object-assign');\n\nvar Lorem = createReactClass({\n  displayName: 'Lorem',\n  getDefaultProps: function () {\n    return {\n      mode: 'paragraphs',\n      format: 'html',\n      count: 5,\n      seed: 0,\n      ordered: false\n    };\n  },\n  render: function () {\n    var props = extend({}, this.props, {\n      units: 'paragraphs',\n      random: random\n    });\n    random.seed(props.seed);\n    var html = loremIpsum(props);\n    var wrapper;\n\n    if (props.mode === 'list') {\n      html = html.replace(/<p>(.*?)<\\/p>/g, '<li>$1</li>');\n\n      if (props.ordered) {\n        wrapper = React.createFactory('ol');\n      } else {\n        wrapper = React.createFactory('ul');\n      }\n    } else {\n      wrapper = React.createFactory('div');\n    }\n\n    props.dangerouslySetInnerHTML = {\n      __html: html\n    }; // own props\n\n    delete props.mode;\n    delete props.ordered;\n    delete props.random; // props passed to seedable-random\n\n    delete props.seed; // props passed to lorem-ipsum\n\n    delete props.count;\n    delete props.units;\n    delete props.sentenceLowerBound;\n    delete props.sentenceUpperBound;\n    delete props.paragraphLowerBound;\n    delete props.paragraphUpperBound;\n    delete props.format;\n    delete props.words;\n    delete props.suffix;\n    return wrapper(props);\n  }\n});\nmodule.exports = Lorem;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/node_modules/react-lorem-component/index.js"],"names":["React","require","createReactClass","loremIpsum","random","extend","Lorem","displayName","getDefaultProps","mode","format","count","seed","ordered","render","props","units","html","wrapper","replace","createFactory","dangerouslySetInnerHTML","__html","sentenceLowerBound","sentenceUpperBound","paragraphLowerBound","paragraphUpperBound","words","suffix","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,iBAAD,CAApB;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,eAAD,CAApB;;AAEA,IAAIK,KAAK,GAAGJ,gBAAgB,CAAC;AAC3BK,EAAAA,WAAW,EAAE,OADc;AAG3BC,EAAAA,eAAe,EAAE,YAAW;AAC1B,WAAO;AACLC,MAAAA,IAAI,EAAM,YADL;AAELC,MAAAA,MAAM,EAAI,MAFL;AAGLC,MAAAA,KAAK,EAAK,CAHL;AAILC,MAAAA,IAAI,EAAM,CAJL;AAKLC,MAAAA,OAAO,EAAG;AALL,KAAP;AAOD,GAX0B;AAa3BC,EAAAA,MAAM,EAAE,YAAW;AACjB,QAAIC,KAAK,GAAGV,MAAM,CAAC,EAAD,EAAK,KAAKU,KAAV,EAAiB;AACjCC,MAAAA,KAAK,EAAG,YADyB;AAEjCZ,MAAAA,MAAM,EAAEA;AAFyB,KAAjB,CAAlB;AAKAA,IAAAA,MAAM,CAACQ,IAAP,CAAYG,KAAK,CAACH,IAAlB;AAEA,QAAIK,IAAI,GAAGd,UAAU,CAACY,KAAD,CAArB;AACA,QAAIG,OAAJ;;AAEA,QAAIH,KAAK,CAACN,IAAN,KAAe,MAAnB,EAA2B;AACzBQ,MAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,gBAAb,EAA+B,aAA/B,CAAP;;AAEA,UAAIJ,KAAK,CAACF,OAAV,EAAmB;AACjBK,QAAAA,OAAO,GAAGlB,KAAK,CAACoB,aAAN,CAAoB,IAApB,CAAV;AACD,OAFD,MAEO;AACLF,QAAAA,OAAO,GAAGlB,KAAK,CAACoB,aAAN,CAAoB,IAApB,CAAV;AACD;AACF,KARD,MAQO;AACLF,MAAAA,OAAO,GAAGlB,KAAK,CAACoB,aAAN,CAAoB,KAApB,CAAV;AACD;;AAEDL,IAAAA,KAAK,CAACM,uBAAN,GAAgC;AAAEC,MAAAA,MAAM,EAAEL;AAAV,KAAhC,CAvBiB,CAyBjB;;AACA,WAAOF,KAAK,CAACN,IAAb;AACA,WAAOM,KAAK,CAACF,OAAb;AACA,WAAOE,KAAK,CAACX,MAAb,CA5BiB,CA8BjB;;AACA,WAAOW,KAAK,CAACH,IAAb,CA/BiB,CAiCjB;;AACA,WAAOG,KAAK,CAACJ,KAAb;AACA,WAAOI,KAAK,CAACC,KAAb;AACA,WAAOD,KAAK,CAACQ,kBAAb;AACA,WAAOR,KAAK,CAACS,kBAAb;AACA,WAAOT,KAAK,CAACU,mBAAb;AACA,WAAOV,KAAK,CAACW,mBAAb;AACA,WAAOX,KAAK,CAACL,MAAb;AACA,WAAOK,KAAK,CAACY,KAAb;AACA,WAAOZ,KAAK,CAACa,MAAb;AAEA,WAAOV,OAAO,CAACH,KAAD,CAAd;AACD;AA1D0B,CAAD,CAA5B;AA6DAc,MAAM,CAACC,OAAP,GAAiBxB,KAAjB","sourcesContent":["'use strict';\n\nvar React = require('react');\nvar createReactClass = require('create-react-class');\nvar loremIpsum = require('lorem-ipsum');\nvar random = require('seedable-random');\nvar extend = require('object-assign');\n\nvar Lorem = createReactClass({\n  displayName: 'Lorem',\n\n  getDefaultProps: function() {\n    return {\n      mode:     'paragraphs',\n      format:   'html',\n      count:    5,\n      seed:     0,\n      ordered:  false\n    };\n  },\n\n  render: function() {\n    var props = extend({}, this.props, {\n      units:  'paragraphs',\n      random: random\n    });\n\n    random.seed(props.seed);\n\n    var html = loremIpsum(props);\n    var wrapper;\n\n    if (props.mode === 'list') {\n      html = html.replace(/<p>(.*?)<\\/p>/g, '<li>$1</li>');\n\n      if (props.ordered) {\n        wrapper = React.createFactory('ol');\n      } else {\n        wrapper = React.createFactory('ul');\n      }\n    } else {\n      wrapper = React.createFactory('div');\n    }\n\n    props.dangerouslySetInnerHTML = { __html: html };\n\n    // own props\n    delete props.mode;\n    delete props.ordered;\n    delete props.random;\n\n    // props passed to seedable-random\n    delete props.seed;\n\n    // props passed to lorem-ipsum\n    delete props.count;\n    delete props.units;\n    delete props.sentenceLowerBound;\n    delete props.sentenceUpperBound;\n    delete props.paragraphLowerBound;\n    delete props.paragraphUpperBound;\n    delete props.format;\n    delete props.words;\n    delete props.suffix;\n\n    return wrapper(props);\n  }\n});\n\nmodule.exports = Lorem;\n"]},"metadata":{},"sourceType":"script"}