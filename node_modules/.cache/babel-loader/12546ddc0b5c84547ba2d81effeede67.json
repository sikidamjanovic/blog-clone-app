{"ast":null,"code":"import _slicedToArray from \"/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Feed from './Components/Feed';\nimport axios from \"axios\";\nimport styled from 'styled-components';\nimport './App.css';\n\nconst App = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        limit = _useState4[0],\n        setLimit = _useState4[1];\n\n  const _useState5 = useState('light'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        mode = _useState6[0],\n        setMode = _useState6[1];\n\n  const fetchData = () => {\n    let url = 'https://jsonplaceholder.typicode.com/photos?_start=0&_limit=' + (limit + 30);\n    axios.get(url).then(res => {\n      setData(res.data);\n    });\n  };\n\n  const isScrolling = () => {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) {\n      return;\n    }\n\n    setLimit(limit + 30);\n  };\n\n  useEffect(() => {\n    fetchData();\n    window.addEventListener(\"scroll\", isScrolling);\n    return () => window.removeEventListener(\"scroll\", isScrolling);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, mode === \"light\" ? React.createElement(LightContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Buttons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setMode('dark'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Dark Mode\")), React.createElement(Feed, {\n    mode: \"light\",\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })) : React.createElement(DarkContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Buttons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setMode('light'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Light Mode\")), React.createElement(Feed, {\n    mode: \"dark\",\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })));\n};\n\nconst LightContainer = styled.div`\n    background-color: #F9F8F6;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    z-index: 0;\n`;\nconst DarkContainer = styled.div`\n    background-color: #121212;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: white;\n    z-index: 0;\n`; // const Header = styled.div`\n//     height: 150px;\n//     width: 100%;\n//     display: flex;\n//     flex-direction: column;\n//     align-items: center;\n//     justify-content: center;\n//     font-family: 'PT Sans', sans-serif;\n//     font-size: 1.5em;\n// `\n\nconst Buttons = styled.div`\n    button{\n        &:hover{\n            transform: scale(1.01);\n            box-shadow: 0 19px 38px rgba(0,0,0,0.10), 0 15px 12px rgba(0,0,0,0.07);\n        }\n        transition: 0.5s;\n        font-family: 'Pt Sans', serif;\n        border: 2px solid rgb(0,0,0,0.6);\n        border-radius: 5px;\n        padding: 15px;\n        background: none;\n    }\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    height: 150px;\n    max-width: 1280px;\n    display: flex;\n    background-color: inherit;\n`;\nexport default App;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/src/App.js"],"names":["React","useState","useEffect","Feed","axios","styled","App","props","data","setData","limit","setLimit","mode","setMode","fetchData","url","get","then","res","isScrolling","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","LightContainer","div","DarkContainer","Buttons"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA,oBAEON,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,QAEVO,IAFU;AAAA,QAEJC,OAFI;;AAAA,qBAGSR,QAAQ,CAAC,CAAD,CAHjB;AAAA;AAAA,QAGVS,KAHU;AAAA,QAGHC,QAHG;;AAAA,qBAIOV,QAAQ,CAAC,OAAD,CAJf;AAAA;AAAA,QAIVW,IAJU;AAAA,QAIJC,OAJI;;AAMjB,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAIC,GAAG,GAAG,kEAAgEL,KAAK,GAAC,EAAtE,CAAV;AACAN,IAAAA,KAAK,CAACY,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,GAAG,IAAI;AACvBT,MAAAA,OAAO,CAACS,GAAG,CAACV,IAAL,CAAP;AACH,KAFD;AAGH,GALD;;AAOA,QAAMW,WAAW,GAAG,MAAM;AACtB,QAAGC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,SAA9C,KAA4DF,QAAQ,CAACC,eAAT,CAAyBE,YAAxF,EAAqG;AACnG;AACD;;AACDd,IAAAA,QAAQ,CAACD,KAAK,GAAG,EAAT,CAAR;AACH,GALD;;AAOAR,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS;AACTM,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,WAAlC;AACA,WAAO,MAAMC,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,WAArC,CAAb;AACH,GAJQ,CAAT;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,IAAI,KAAK,OAAT,GACG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,MAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,IAAI,EAAEL,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADH,GAQG,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,MAAMK,OAAO,CAAC,OAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,IAAI,EAAEL,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CATR,CADJ;AAmBH,CA7CD;;AA+CA,MAAMoB,cAAc,GAAGvB,MAAM,CAACwB,GAAI;;;;;;CAAlC;AAQA,MAAMC,aAAa,GAAGzB,MAAM,CAACwB,GAAI;;;;;;;CAAjC,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,OAAO,GAAG1B,MAAM,CAACwB,GAAI;;;;;;;;;;;;;;;;;;;;;CAA3B;AAuBA,eAAevB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Feed from './Components/Feed'\nimport axios from \"axios\";\nimport styled from 'styled-components'\nimport './App.css';\n\nconst App = props => {\n\n    const [data, setData] = useState([])\n    const [limit, setLimit] = useState(0)\n    const [mode, setMode] = useState('light')\n\n    const fetchData = () => {\n        let url = 'https://jsonplaceholder.typicode.com/photos?_start=0&_limit='+(limit+30)\n        axios.get(url).then(res => {\n            setData(res.data)\n        })\n    }\n\n    const isScrolling = () => {\n        if(window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight){\n          return;\n        }\n        setLimit(limit + 30)\n    }\n      \n    useEffect(() => {\n        fetchData()\n        window.addEventListener(\"scroll\", isScrolling);\n        return () => window.removeEventListener(\"scroll\", isScrolling);\n    })\n\n    return (\n        <div>\n            {mode === \"light\" ?\n                <LightContainer>\n                    <Buttons>\n                        <button onClick={() => setMode('dark')}>Dark Mode</button>\n                    </Buttons>\n                    <Feed mode=\"light\" data={data}/>\n                </LightContainer> \n                :\n                <DarkContainer>\n                    <Buttons>\n                        <button onClick={() => setMode('light')}>Light Mode</button>\n                    </Buttons>\n                    <Feed mode=\"dark\" data={data}/>\n                </DarkContainer>\n            }\n        </div>\n    );\n}\n\nconst LightContainer = styled.div`\n    background-color: #F9F8F6;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    z-index: 0;\n`\n\nconst DarkContainer = styled.div`\n    background-color: #121212;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: white;\n    z-index: 0;\n`\n\n// const Header = styled.div`\n//     height: 150px;\n//     width: 100%;\n//     display: flex;\n//     flex-direction: column;\n//     align-items: center;\n//     justify-content: center;\n//     font-family: 'PT Sans', sans-serif;\n//     font-size: 1.5em;\n// `\n\nconst Buttons = styled.div`\n    button{\n        &:hover{\n            transform: scale(1.01);\n            box-shadow: 0 19px 38px rgba(0,0,0,0.10), 0 15px 12px rgba(0,0,0,0.07);\n        }\n        transition: 0.5s;\n        font-family: 'Pt Sans', serif;\n        border: 2px solid rgb(0,0,0,0.6);\n        border-radius: 5px;\n        padding: 15px;\n        background: none;\n    }\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    height: 150px;\n    max-width: 1280px;\n    display: flex;\n    background-color: inherit;\n`\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}