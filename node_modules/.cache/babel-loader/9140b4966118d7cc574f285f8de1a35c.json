{"ast":null,"code":"import _slicedToArray from \"/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Feed from './Components/Feed';\nimport axios from \"axios\";\nimport styled from 'styled-components';\nimport './App.css';\n\nconst App = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        limit = _useState4[0],\n        setLimit = _useState4[1];\n\n  const _useState5 = useState('light'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        mode = _useState6[0],\n        setMode = _useState6[1];\n\n  const fetchData = () => {\n    let url = 'https://jsonplaceholder.typicode.com/photos?_start=0&_limit=' + (limit + 30);\n    axios.get(url).then(res => {\n      setData(res.data);\n    });\n  };\n\n  const isScrolling = () => {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) {\n      return;\n    }\n\n    setLimit(limit + 30);\n  };\n\n  useEffect(() => {\n    fetchData();\n    window.addEventListener(\"scroll\", isScrolling);\n    return () => window.removeEventListener(\"scroll\", isScrolling);\n  });\n\n  const getContainer = () => {\n    if (mode === 'light') {\n      return React.createElement(LightContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Feed, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(DarkContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Feed, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    }\n  };\n\n  return getContainer();\n};\n\nconst LightContainer = styled.div`\n    backgroundColor: '#F9F8F6';\n    display: flex;\n    justify-content: center;\n`;\nconst DarkContainer = styled.div`\n    backgroundColor: '#000';\n    display: flex;\n    justify-content: center;\n`;\nexport default App;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/src/App.js"],"names":["React","useState","useEffect","Feed","axios","styled","App","props","data","setData","limit","setLimit","mode","setMode","fetchData","url","get","then","res","isScrolling","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","getContainer","LightContainer","div","DarkContainer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA,oBAEON,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,QAEVO,IAFU;AAAA,QAEJC,OAFI;;AAAA,qBAGSR,QAAQ,CAAC,CAAD,CAHjB;AAAA;AAAA,QAGVS,KAHU;AAAA,QAGHC,QAHG;;AAAA,qBAIOV,QAAQ,CAAC,OAAD,CAJf;AAAA;AAAA,QAIVW,IAJU;AAAA,QAIJC,OAJI;;AAMjB,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAIC,GAAG,GAAG,kEAAgEL,KAAK,GAAC,EAAtE,CAAV;AACAN,IAAAA,KAAK,CAACY,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,GAAG,IAAI;AACvBT,MAAAA,OAAO,CAACS,GAAG,CAACV,IAAL,CAAP;AACH,KAFD;AAGH,GALD;;AAOA,QAAMW,WAAW,GAAG,MAAM;AACtB,QAAGC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,SAA9C,KAA4DF,QAAQ,CAACC,eAAT,CAAyBE,YAAxF,EAAqG;AACnG;AACD;;AACDd,IAAAA,QAAQ,CAACD,KAAK,GAAG,EAAT,CAAR;AACH,GALD;;AAOAR,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS;AACTM,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,WAAlC;AACA,WAAO,MAAMC,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,WAArC,CAAb;AACH,GAJQ,CAAT;;AAMA,QAAMS,YAAY,GAAG,MAAM;AACvB,QAAGhB,IAAI,KAAK,OAAZ,EAAoB;AAChB,aACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEJ,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH,KAND,MAMK;AACD,aACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;AACJ,GAdD;;AAgBA,SACIoB,YAAY,EADhB;AAGH,CA7CD;;AA+CA,MAAMC,cAAc,GAAGxB,MAAM,CAACyB,GAAI;;;;CAAlC;AAMA,MAAMC,aAAa,GAAG1B,MAAM,CAACyB,GAAI;;;;CAAjC;AAMA,eAAexB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Feed from './Components/Feed'\nimport axios from \"axios\";\nimport styled from 'styled-components'\nimport './App.css';\n\nconst App = props => {\n\n    const [data, setData] = useState([])\n    const [limit, setLimit] = useState(0)\n    const [mode, setMode] = useState('light')\n\n    const fetchData = () => {\n        let url = 'https://jsonplaceholder.typicode.com/photos?_start=0&_limit='+(limit+30)\n        axios.get(url).then(res => {\n            setData(res.data)\n        })\n    }\n\n    const isScrolling = () => {\n        if(window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight){\n          return;\n        }\n        setLimit(limit + 30)\n    }\n      \n    useEffect(() => {\n        fetchData()\n        window.addEventListener(\"scroll\", isScrolling);\n        return () => window.removeEventListener(\"scroll\", isScrolling);\n    })\n\n    const getContainer = () => {\n        if(mode === 'light'){\n            return(\n                <LightContainer>\n                    <Feed data={data}/>\n                </LightContainer>\n            )\n        }else{\n            return(\n                <DarkContainer>\n                    <Feed data={data}/>\n                </DarkContainer>\n            )\n        }\n    }\n\n    return (\n        getContainer()\n    );\n}\n\nconst LightContainer = styled.div`\n    backgroundColor: '#F9F8F6';\n    display: flex;\n    justify-content: center;\n`\n\nconst DarkContainer = styled.div`\n    backgroundColor: '#000';\n    display: flex;\n    justify-content: center;\n`\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}