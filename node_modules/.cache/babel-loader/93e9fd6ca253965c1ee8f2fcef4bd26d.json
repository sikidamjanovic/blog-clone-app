{"ast":null,"code":"import _slicedToArray from \"/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Feed from './Components/Feed';\nimport axios from \"axios\";\nimport './App.css';\n\nconst App = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        limit = _useState4[0],\n        setLimit = _useState4[1];\n\n  const fetchData = () => {\n    let url = 'https://jsonplaceholder.typicode.com/photos?_start=0&_limit=' + (limit + 30);\n    axios.get(url).then(res => {\n      setData(res.data);\n    });\n  };\n\n  const isScrolling = () => {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) {\n      return;\n    }\n\n    setLimit(limit + 30);\n  };\n\n  useEffect(() => {\n    fetchData();\n    window.addEventListener(\"scroll\", isScrolling);\n    return () => window.removeEventListener(\"scroll\", isScrolling);\n  });\n  return React.createElement(\"div\", {\n    style: styles.appStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Feed, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nconst styles = {\n  appStyle: {\n    backgroundColor: 'red'\n  }\n};\nexport default App;","map":{"version":3,"sources":["/Users/sikidamjanovic/Documents/GitHub/blog-clone-app/src/App.js"],"names":["React","useState","useEffect","Feed","axios","App","props","data","setData","limit","setLimit","fetchData","url","get","then","res","isScrolling","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","styles","appStyle","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA,oBAEOL,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,QAEVM,IAFU;AAAA,QAEJC,OAFI;;AAAA,qBAGSP,QAAQ,CAAC,CAAD,CAHjB;AAAA;AAAA,QAGVQ,KAHU;AAAA,QAGHC,QAHG;;AAKjB,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAIC,GAAG,GAAG,kEAAgEH,KAAK,GAAC,EAAtE,CAAV;AACAL,IAAAA,KAAK,CAACS,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,GAAG,IAAI;AACvBP,MAAAA,OAAO,CAACO,GAAG,CAACR,IAAL,CAAP;AACH,KAFD;AAGH,GALD;;AAOA,QAAMS,WAAW,GAAG,MAAM;AACtB,QAAGC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,SAA9C,KAA4DF,QAAQ,CAACC,eAAT,CAAyBE,YAAxF,EAAqG;AACnG;AACD;;AACDZ,IAAAA,QAAQ,CAACD,KAAK,GAAG,EAAT,CAAR;AACH,GALD;;AAOAP,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,SAAS;AACTM,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,WAAlC;AACA,WAAO,MAAMC,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,WAArC,CAAb;AACH,GAJQ,CAAT;AAMA,SACI;AAAK,IAAA,KAAK,EAAES,MAAM,CAACC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEnB,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CA9BD;;AAgCA,MAAMkB,MAAM,GAAG;AACXC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,eAAe,EAAE;AADX;AADC,CAAf;AAMA,eAAetB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Feed from './Components/Feed'\nimport axios from \"axios\";\nimport './App.css';\n\nconst App = props => {\n\n    const [data, setData] = useState([])\n    const [limit, setLimit] = useState(0)\n\n    const fetchData = () => {\n        let url = 'https://jsonplaceholder.typicode.com/photos?_start=0&_limit='+(limit+30)\n        axios.get(url).then(res => {\n            setData(res.data)\n        })\n    }\n\n    const isScrolling = () => {\n        if(window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight){\n          return;\n        }\n        setLimit(limit + 30)\n    }\n      \n    useEffect(() => {\n        fetchData()\n        window.addEventListener(\"scroll\", isScrolling);\n        return () => window.removeEventListener(\"scroll\", isScrolling);\n    })\n\n    return (\n        <div style={styles.appStyle}>\n            <Feed data={data}/>\n        </div>\n    );\n}\n\nconst styles = {\n    appStyle: {\n        backgroundColor: 'red'\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}